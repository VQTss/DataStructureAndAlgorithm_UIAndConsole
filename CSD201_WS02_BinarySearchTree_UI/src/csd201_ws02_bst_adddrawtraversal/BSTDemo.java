/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package csd201_ws02_bst_adddrawtraversal;

import java.awt.BorderLayout;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Random;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author admin
 */
public class BSTDemo extends javax.swing.JFrame {

    BSTree tree;
    BSTPaper p;

    /**
     * Creates new form BSTDemo
     */
    public BSTDemo() {
        initComponents();

        this.setLocationRelativeTo(null);

        this.setExtendedState(this.getExtendedState() | JFrame.MAXIMIZED_BOTH);
        this.tree = new BSTree(60, 1366 * 2);
        this.p = new BSTPaper(tree);

        this.pnlPaper.setLayout(new BorderLayout());
        this.pnlPaper.add(p, BorderLayout.CENTER);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlConfiguration = new javax.swing.JPanel();
        txtNodeValue = new javax.swing.JTextField();
        btnAddNewNode = new javax.swing.JButton();
        btnAddRandomValue = new javax.swing.JButton();
        btnPreOrder = new javax.swing.JButton();
        btnInOrder = new javax.swing.JButton();
        btnPostOrder = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        txtTraversalResult = new javax.swing.JTextField();
        btnFind = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        btnBalancing = new javax.swing.JButton();
        btnSave = new javax.swing.JButton();
        btnOpen = new javax.swing.JButton();
        btnBFS = new javax.swing.JButton();
        btnDFS = new javax.swing.JButton();
        pnlPaper = new javax.swing.JPanel();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Binary Search Tree Demo");

        pnlConfiguration.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        btnAddNewNode.setText("Add new node");
        btnAddNewNode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewNodeActionPerformed(evt);
            }
        });

        btnAddRandomValue.setText("Add random value");
        btnAddRandomValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddRandomValueActionPerformed(evt);
            }
        });

        btnPreOrder.setText("PreOrder");
        btnPreOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPreOrderActionPerformed(evt);
            }
        });

        btnInOrder.setText("InOrder");
        btnInOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnInOrderActionPerformed(evt);
            }
        });

        btnPostOrder.setText("PostOrder");
        btnPostOrder.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPostOrderActionPerformed(evt);
            }
        });

        jLabel1.setText("Traversal Result");

        txtTraversalResult.setEditable(false);

        btnFind.setText("Find");
        btnFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFindActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        btnBalancing.setText("Balancing");
        btnBalancing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBalancingActionPerformed(evt);
            }
        });

        btnSave.setText("Save");
        btnSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveActionPerformed(evt);
            }
        });

        btnOpen.setText("Open");
        btnOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOpenActionPerformed(evt);
            }
        });

        btnBFS.setText("BFS");
        btnBFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBFSActionPerformed(evt);
            }
        });

        btnDFS.setText("DFS");
        btnDFS.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDFSActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout pnlConfigurationLayout = new javax.swing.GroupLayout(pnlConfiguration);
        pnlConfiguration.setLayout(pnlConfigurationLayout);
        pnlConfigurationLayout.setHorizontalGroup(
            pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigurationLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlConfigurationLayout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTraversalResult))
                    .addGroup(pnlConfigurationLayout.createSequentialGroup()
                        .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddNewNode)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnAddRandomValue, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnFind)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnDelete)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnClear)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBalancing)
                        .addGap(17, 17, 17)
                        .addComponent(btnSave)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOpen)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 103, Short.MAX_VALUE)
                        .addComponent(btnDFS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnBFS)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnPreOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnInOrder)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPostOrder))))
        );
        pnlConfigurationLayout.setVerticalGroup(
            pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConfigurationLayout.createSequentialGroup()
                .addGroup(pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNodeValue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAddNewNode)
                    .addComponent(btnAddRandomValue)
                    .addComponent(btnPreOrder)
                    .addComponent(btnInOrder)
                    .addComponent(btnPostOrder)
                    .addComponent(btnFind)
                    .addComponent(btnDelete)
                    .addComponent(btnClear)
                    .addComponent(btnBalancing)
                    .addComponent(btnSave)
                    .addComponent(btnOpen)
                    .addComponent(btnBFS)
                    .addComponent(btnDFS))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlConfigurationLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtTraversalResult, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pnlPaper.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout pnlPaperLayout = new javax.swing.GroupLayout(pnlPaper);
        pnlPaper.setLayout(pnlPaperLayout);
        pnlPaperLayout.setHorizontalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnlPaperLayout.setVerticalGroup(
            pnlPaperLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 387, Short.MAX_VALUE)
        );

        jButton6.setText("jButton1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(pnlConfiguration, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(646, 646, 646)
                    .addComponent(jButton6)
                    .addContainerGap(646, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlConfiguration, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(pnlPaper, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(239, 239, 239)
                    .addComponent(jButton6)
                    .addContainerGap(239, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

  private void btnAddNewNodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewNodeActionPerformed
      // TODO add your handling code here:
      System.out.println(txtNodeValue.getText());
      int nodeValue = Integer.parseInt(txtNodeValue.getText());
      p.addNode(nodeValue);
  }//GEN-LAST:event_btnAddNewNodeActionPerformed

    public static int randInt(int min, int max) {

        // NOTE: This will (intentionally) not run as written so that folks
        // copy-pasting have to think about how to initialize their
        // Random instance.  Initialization of the Random instance is outside
        // the main scope of the question, but some decent options are to have
        // a field that is initialized once and then re-used as needed or to
        // use ThreadLocalRandom (if using at least Java 1.7).
        // 
        // In particular, do NOT do 'Random rand = new Random()' here or you
        // will get not very good / not very random results.
        Random rand = new Random();

        // nextInt is normally exclusive of the top value,
        // so add 1 to make it inclusive
        int randomNum = rand.nextInt((max - min) + 1) + min;

        return randomNum;
    }

  private void btnAddRandomValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddRandomValueActionPerformed
      // TODO add your handling code here:
      int nodeValue = randInt(0, 99);
      p.addNode(nodeValue);
  }//GEN-LAST:event_btnAddRandomValueActionPerformed

  private void btnPreOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPreOrderActionPerformed
      // TODO add your handling code here:
      this.tree.PreOrder();
      this.txtTraversalResult.setText("Pre-order traversal result: " + this.tree.getResult());
  }//GEN-LAST:event_btnPreOrderActionPerformed

  private void btnInOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnInOrderActionPerformed
      // TODO add your handling code here:
      this.tree.InOrder();
      this.txtTraversalResult.setText("In-order traversal result: " + this.tree.getResult());
  }//GEN-LAST:event_btnInOrderActionPerformed

  private void btnPostOrderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPostOrderActionPerformed
      // TODO add your handling code here:
      this.tree.PostOrder();
      this.txtTraversalResult.setText("Post-order traversal result: " + this.tree.getResult());

  }//GEN-LAST:event_btnPostOrderActionPerformed

    private void btnFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFindActionPerformed
        // TODO add your handling code here:
        BSTNode node = this.tree.findNode(Integer.parseInt(txtNodeValue.getText()));
        if (node == null) {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "s is not found!");
            JOptionPane.showMessageDialog(this, "The node '" + txtNodeValue.getText() + "s is not found!");
        } else {
            txtTraversalResult.setText("The node '" + txtNodeValue.getText() + "s is found in the binary tree");
            p.drawPathOfNode();
        }
    }//GEN-LAST:event_btnFindActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        int nodeValue = Integer.parseInt(txtNodeValue.getText());
        BSTNode node = this.tree.findNode(nodeValue);
        if (node == null) {
            JOptionPane.showMessageDialog(this, "The node '" + nodeValue + "' is not found in BST");
            txtTraversalResult.setText("The node '" + nodeValue + "' is not found in BST");
        } else {
            p.drawPathOfNode();
            txtTraversalResult.setText("The node '" + nodeValue + "' is found: " + tree.getPathOfNode());
            if (JOptionPane.showConfirmDialog(this,
                    "Do you really want to delete the node '" + nodeValue + "'?",
                    "Warning",
                    JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                tree.removeNode(node);
                p.deleteNode();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        // TODO add your handling code here:
        this.tree.clear();
        p.refresh();
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnBalancingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBalancingActionPerformed
        // TODO add your handling code here:
        this.tree.balacing();
        p.refresh();
    }//GEN-LAST:event_btnBalancingActionPerformed

    private void btnSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveActionPerformed
        // TODO add your handling code here:
        JFileChooser jfc = new JFileChooser();
        if (jfc.showSaveDialog(this) == JFileChooser.APPROVE_OPTION) {
            FileWriter fw = null;
            try {
                File file = jfc.getSelectedFile();
                fw = new FileWriter(file);
                this.tree.PreOrder();
                fw.write(this.tree.getCountData() +"\n");
                fw.write(this.tree.getFileData());
                fw.flush();
            } catch (IOException ex) {
                System.out.println(ex);
            }
        }
    }//GEN-LAST:event_btnSaveActionPerformed

    private void btnOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOpenActionPerformed
        // TODO add your handling code here:
        
        JFileChooser jfc = new JFileChooser();
        if (jfc.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File file = jfc.getSelectedFile();
            if (file.exists()) {
                try {
                    this.tree.clear();
                    Scanner sc  = new Scanner(file);
                    int numberOfNodeData = sc.nextInt();
                    int nodeData;
                    for (int i = 0; i < numberOfNodeData; i++) {
                        nodeData = sc.nextInt();
                        this.tree.addNode(nodeData);
                    }
                    sc.close();
                    
                    p.refresh();
                } catch (Exception e) {
                    System.out.println(e);
                }
            }
        }
        
        
        
        
    }//GEN-LAST:event_btnOpenActionPerformed

    private void btnDFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDFSActionPerformed
        // TODO add your handling code here:
        this.tree.DFS();
        this.txtTraversalResult.setText("DFS traversal result: " + this.tree.getResult());
    }//GEN-LAST:event_btnDFSActionPerformed

    private void btnBFSActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBFSActionPerformed
        // TODO add your handling code here:
        this.tree.BFS();
        this.txtTraversalResult.setText("BFS traversal result: " + this.tree.getResult());
    }//GEN-LAST:event_btnBFSActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BSTDemo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BSTDemo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewNode;
    private javax.swing.JButton btnAddRandomValue;
    private javax.swing.JButton btnBFS;
    private javax.swing.JButton btnBalancing;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDFS;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFind;
    private javax.swing.JButton btnInOrder;
    private javax.swing.JButton btnOpen;
    private javax.swing.JButton btnPostOrder;
    private javax.swing.JButton btnPreOrder;
    private javax.swing.JButton btnSave;
    private javax.swing.JButton jButton6;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel pnlConfiguration;
    private javax.swing.JPanel pnlPaper;
    private javax.swing.JTextField txtNodeValue;
    private javax.swing.JTextField txtTraversalResult;
    // End of variables declaration//GEN-END:variables
}
